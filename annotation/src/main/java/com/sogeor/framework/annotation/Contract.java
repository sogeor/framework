/*
 * Copyright 2024 Sogeor
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.sogeor.framework.annotation;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Представляет собой аннотацию, применимую к элементу, исполняющему определённый контракт.
 * <p>
 * Элемент может быть либо методом, либо конструктором.
 * <p>
 * Контракт позволяет описать поведение элемента: что возвращает или какой программный сбой и/или неисправность
 * генерирует элемент при определённых аргументах, как элемент влияет на окружение.
 *
 * @since 1.0.0-RC1
 */
@Documented
@Retention(RetentionPolicy.CLASS)
@Target({ElementType.METHOD, ElementType.CONSTRUCTOR})
public @interface Contract {

    /**
     * Позволяет описать поведение элемента при определённых аргументах.
     *
     * @return Описание поведения элемента при определённых аргументах.
     *
     * @implSpec При описании поведения должен соблюдаться следующий синтаксис:
     * <pre>{@code
     * <contract> ::= <clause> ("; " <clause>)*
     * <clause> ::= <args> " -> " <result>
     * <args> ::= <arg> (", " <arg>)*
     * <arg> ::= ("this" | "?" | "null" | "!null" | "false" | "true")
     * <result> ::= ("this" | "new" | "null" | "false" | "true" | [1-9] ([0-9]+)?) | "$"? ("?" | "value" | "!null" | "failure" | "fault")
     * }</pre>
     * @implNote Согласно описанному синтаксису существует несколько понятий:
     * <ol>
     *     <li>
     *         {@code <arg>} — это признак аргумента элемента. Существуют следующие признаки:
     *         <ul>
     *             <li>
     *                 {@code this} — это признак аргумента, являющегося ссылкой на экземпляр родительского класса
     *                 элемента.
     *             </li>
     *             <li>
     *                 {@code ?} — это признак неопределённого аргумента, то есть аргумента, который либо может быть или
     *                 не быть {@code this}, либо может быть или не быть {@code null}, либо может быть {@code false}
     *                 или {@code true}.
     *             </li>
     *             <li>
     *                 {@code null} — это признак аргумента, являющегося {@code null}.
     *             </li>
     *             <li>
     *                 {@code !null} — это признак аргумента, не являющегося {@code null}.
     *             </li>
     *             <li>
     *                 {@code false} — это признак аргумента, являющегося {@code false}.
     *             </li>
     *             <li>
     *                 {@code true} — это признак аргумента, являющегося {@code true}.
     *             </li>
     *         </ul>
     *     </li>
     *     <li>
     *         {@code <args>} — это перечень признаков всех аргументов элемента.
     *     </li>
     *     <li>
     *         {@code <result>} — это признак возвращаемого значения либо генерируемого программного сбоя или
     *         неисправности элемента, то есть признак результата выполнения элемента. Существуют следующие признаки:
     *         <ul>
     *             <li>
     *                 {@code this} — это признак возвращаемого значения, являющегося ссылкой на экземпляр родительского
     *                 класса элемента.
     *             </li>
     *             <li>
     *                 {@code new} — это признак возвращаемого значения, являющегося ссылкой на новый, созданный во
     *                 время выполнения элемента экземпляр.
     *             </li>
     *             <li>
     *                 {@code null} — это признак возвращаемого значения, являющегося {@code null}.
     *             </li>
     *             <li>
     *                 {@code false} — это признак возвращаемого значения, являющегося {@code false}.
     *             </li>
     *             <li>
     *                 {@code true} — это признак возвращаемого значения, являющегося {@code true}.
     *             </li>
     *             <li>
     *                 {@code [1-9] ([0-9]+)?} — это признак возвращаемого значения, являющегося определённым аргументом
     *                 элемента. Указанное число является порядковым номером аргумента.
     *             </li>
     *             <li>
     *                 {@code ?} — это признак неопределённого возвращаемого значения либо непроверяемого программного
     *                 сбоя или неисправности. Значение либо может быть или не быть {@code this}, либо может быть или не
     *                 быть {@code null}, либо может быть {@code false} или {@code true}, может быть определённым
     *                 аргументом элемента.
     *             </li>
     *             <li>
     *                 {@code $?} — это признак неопределённого, постоянного в течение существования экземпляра
     *                 родительского класса элемента возвращаемого значения либо проверяемого программного сбоя или
     *                 неисправности. Значение либо может быть или не быть {@code this}, либо может быть или не быть
     *                 {@code null}, либо может быть {@code false} или {@code true}, может быть определённым аргументом
     *                 элемента.
     *             </li>
     *             <li>
     *                 {@code value} — это признак неопределённого возвращаемого значения. Значение либо может быть или
     *                 не быть {@code this}, либо может быть или не быть {@code null}, либо может быть {@code false} или
     *                 {@code true}, может быть определённым аргументом элемента.
     *             </li>
     *             <li>
     *                 {@code $value} — это признак неопределённого, постоянного в течение существования экземпляра
     *                 родительского класса элемента возвращаемого значения. Значение либо может быть или не быть
     *                 {@code this}, либо может быть или не быть {@code null}, либо может быть {@code false} или
     *                 {@code true}, может быть определённым аргументом элемента.
     *             </li>
     *             <li>
     *                 {@code !null} — это признак возвращаемого значения, не являющегося {@code null}.
     *             </li>
     *             <li>
     *                 {@code $!null} — это признак постоянного в течение существования экземпляра родительского класса
     *                 элемента возвращаемого значения, не являющегося {@code null}.
     *             </li>
     *             <li>
     *                 {@code failure} — это признак непроверяемого программного сбоя.
     *             </li>
     *             <li>
     *                 {@code $failure} — это признак проверяемого программного сбоя.
     *             </li>
     *             <li>
     *                 {@code fault} — это признак непроверяемой программной неисправности.
     *             </li>
     *             <li>
     *                 {@code $fault} — это признак проверяемой программной неисправности.
     *             </li>
     *         </ul>
     *     </li>
     *     <li>
     *         {@code <clause>} — это связь между перечнем признаков всех аргументов элемента и признаком результата
     *         выполнения элемента.
     *     </li>
     *     <li>
     *         {@code <contract>} — это перечень связей между перечнями признаков всех аргументов элемента и признаками
     *         результатов выполнения элемента, то есть непосредственно описание контракта.
     *     </li>
     * </ol>
     * @since 1.0.0-RC1
     */
    String value();

}
